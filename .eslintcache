[{"/Users/miamorticia/Desktop/Udemy/React/pathrisewl/src/index.js":"1","/Users/miamorticia/Desktop/Udemy/React/pathrisewl/src/App.js":"2","/Users/miamorticia/Desktop/Udemy/React/pathrisewl/src/reportWebVitals.js":"3","/Users/miamorticia/Desktop/Udemy/React/pathrisewl/src/components/Card.js":"4","/Users/miamorticia/Desktop/Udemy/React/pathrisewl/src/modals/CreateWish.js":"5","/Users/miamorticia/Desktop/Udemy/React/pathrisewl/src/modals/EditWish.js":"6","/Users/miamorticia/Desktop/Udemy/React/pathrisewl/src/components/WishList.js":"7"},{"size":221,"mtime":1623428857530,"results":"8","hashOfConfig":"9"},{"size":272,"mtime":1623428824093,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1619253139000,"results":"11","hashOfConfig":"9"},{"size":1916,"mtime":1623427957005,"results":"12","hashOfConfig":"9"},{"size":1701,"mtime":1623428642802,"results":"13","hashOfConfig":"9"},{"size":1844,"mtime":1623428652781,"results":"14","hashOfConfig":"9"},{"size":1804,"mtime":1623428730284,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j7c1yd",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/miamorticia/Desktop/Udemy/React/pathrisewl/src/index.js",[],"/Users/miamorticia/Desktop/Udemy/React/pathrisewl/src/App.js",[],"/Users/miamorticia/Desktop/Udemy/React/pathrisewl/src/reportWebVitals.js",[],["32","33"],"/Users/miamorticia/Desktop/Udemy/React/pathrisewl/src/components/Card.js",[],"/Users/miamorticia/Desktop/Udemy/React/pathrisewl/src/modals/CreateWish.js",[],"/Users/miamorticia/Desktop/Udemy/React/pathrisewl/src/modals/EditWish.js",["34"],"import React, { useState , useEffect} from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst EditWishPopup = ({modal, toggle, updateWish, wishObj}) => {\n    const [wishName, setWishName] = useState('');\n    const [description, setDescription] = useState('');\n\n    const handleChange = (e) => {\n        \n        const {name, value} = e.target\n\n        if(name === \"wishName\"){\n            setWishName(value)\n        }else{\n            setDescription(value)\n        }\n\n\n    }\n\n    useEffect(() => {\n        setWishName(wishObj.Name)\n        setDescription(wishObj.Description)\n    },[])\n\n    const handleUpdate = (e) => {\n        e.preventDefault();\n        let tempObj = {}\n        tempObj['Name'] = wishName\n        tempObj['Description'] = description\n        updateWish(tempObj)\n    }\n\n    return (\n        <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>Update Wish</ModalHeader>\n            <ModalBody>\n            \n                    <div className = \"form-group\">\n                        <label>Wish Name</label>\n                        <input type=\"text\" className = \"form-control\" value = {wishName} onChange = {handleChange} name = \"wishName\"/>\n                    </div>\n                    <div className = \"form-group\">\n                        <label>Description</label>\n                        <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\n                    </div>\n                \n            </ModalBody>\n            <ModalFooter>\n            <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n            </ModalFooter>\n      </Modal>\n    );\n};\n\nexport default EditWishPopup;","/Users/miamorticia/Desktop/Udemy/React/pathrisewl/src/components/WishList.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":24,"column":7,"nodeType":"41","endLine":24,"endColumn":9,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'wishObj.Description' and 'wishObj.Name'. Either include them or remove the dependency array. If 'setWishName' needs the current value of 'wishObj.Name', you can also switch to useReducer instead of useState and read 'wishObj.Name' in the reducer.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [wishObj.Description, wishObj.Name]",{"range":"48","text":"49"},[628,630],"[wishObj.Description, wishObj.Name]"]